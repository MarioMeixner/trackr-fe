/* tslint:disable */
/* eslint-disable */
/**
 * Trackr
 * The Trackr API description
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserEntity } from './UserEntity';
import {
    UserEntityFromJSON,
    UserEntityFromJSONTyped,
    UserEntityToJSON,
    UserEntityToJSONTyped,
} from './UserEntity';

/**
 * 
 * @export
 * @interface TrackEntity
 */
export interface TrackEntity {
    /**
     * 
     * @type {string}
     * @memberof TrackEntity
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TrackEntity
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof TrackEntity
     */
    date: Date;
    /**
     * 
     * @type {object}
     * @memberof TrackEntity
     */
    startTime?: object | null;
    /**
     * 
     * @type {object}
     * @memberof TrackEntity
     */
    endTime?: object | null;
    /**
     * 
     * @type {string}
     * @memberof TrackEntity
     */
    duration: string;
    /**
     * 
     * @type {object}
     * @memberof TrackEntity
     */
    description?: object | null;
    /**
     * 
     * @type {UserEntity}
     * @memberof TrackEntity
     */
    author: UserEntity;
    /**
     * 
     * @type {string}
     * @memberof TrackEntity
     */
    authorId: string;
}

/**
 * Check if a given object implements the TrackEntity interface.
 */
export function instanceOfTrackEntity(value: object): value is TrackEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('duration' in value) || value['duration'] === undefined) return false;
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('authorId' in value) || value['authorId'] === undefined) return false;
    return true;
}

export function TrackEntityFromJSON(json: any): TrackEntity {
    return TrackEntityFromJSONTyped(json, false);
}

export function TrackEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'date': (new Date(json['date'])),
        'startTime': json['startTime'] == null ? undefined : json['startTime'],
        'endTime': json['endTime'] == null ? undefined : json['endTime'],
        'duration': json['duration'],
        'description': json['description'] == null ? undefined : json['description'],
        'author': UserEntityFromJSON(json['author']),
        'authorId': json['authorId'],
    };
}

export function TrackEntityToJSON(json: any): TrackEntity {
    return TrackEntityToJSONTyped(json, false);
}

export function TrackEntityToJSONTyped(value?: TrackEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'date': ((value['date']).toISOString()),
        'startTime': value['startTime'],
        'endTime': value['endTime'],
        'duration': value['duration'],
        'description': value['description'],
        'author': UserEntityToJSON(value['author']),
        'authorId': value['authorId'],
    };
}

